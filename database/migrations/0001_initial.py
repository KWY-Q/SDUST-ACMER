# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-03-13 09:06
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OJ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=8, unique=True)),
                ('caption', models.CharField(default='--', max_length=64)),
                ('available', models.BooleanField(default=False)),
                ('notice', models.TextField(default='')),
                ('crawler_problem', models.CharField(max_length=32, null=True)),
                ('crawler_submission', models.CharField(max_length=32, null=True)),
                ('crawler_category', models.CharField(max_length=32, null=True)),
                ('last_update_time', models.BigIntegerField(default=0)),
                ('updating', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='OJAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('OJ_caption', models.CharField(max_length=64)),
                ('account', models.CharField(max_length=32)),
                ('OJ', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='account', to='database.OJ', to_field='name')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='account', to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oj_caption', models.CharField(default='', max_length=64)),
                ('pid', models.CharField(default='--', max_length=16)),
                ('index_id', models.CharField(max_length=32, unique=True)),
                ('title', models.CharField(default='--', max_length=128)),
                ('available', models.BooleanField(default=False)),
                ('special_judge', models.BooleanField(default=False)),
                ('time_limit', models.IntegerField(default=0)),
                ('memory_limit', models.IntegerField(default=-1)),
                ('description', models.TextField(default='')),
                ('input', models.TextField(default='')),
                ('output', models.TextField(default='')),
                ('sample_input', models.TextField(default='')),
                ('sample_output', models.TextField(default='')),
                ('hint', models.TextField(default='')),
                ('source', models.TextField(default='Unknown')),
                ('judge', models.TextField(default='')),
                ('update_time', models.BigIntegerField(default=0)),
                ('oj_special', models.TextField(default='')),
                ('oj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problem', to='database.OJ', to_field='name')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('caption', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='ProblemCategoryCategoryRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_relation', to='database.ProblemCategory', to_field='name')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_relation', to='database.ProblemCategory', to_field='name')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemCategoryGroupRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.ProblemCategory', to_field='name')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemCategoryProblemRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direct', models.BooleanField(default=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problem_relation', to='database.ProblemCategory', to_field='name')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_relation', to='database.Problem')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemUserRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('solved', models.BooleanField(default=False)),
                ('first_time', models.BigIntegerField(default=0)),
                ('ac_time', models.BigIntegerField(default=-1)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_relation', to='database.Problem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problem_tried_relation', to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_account', models.CharField(max_length=32)),
                ('oj_caption', models.CharField(default='', max_length=64)),
                ('problem_pid', models.CharField(default='--', max_length=16)),
                ('problem_title', models.CharField(default='--', max_length=128)),
                ('problem_time_limit', models.IntegerField(default=0)),
                ('problem_memory_limit', models.IntegerField(default=-1)),
                ('sid', models.CharField(default='--', max_length=16)),
                ('sub_time', models.BigIntegerField(default=0)),
                ('result', models.CharField(max_length=32)),
                ('result_word', models.CharField(max_length=32)),
                ('language', models.CharField(default='unknown', max_length=32)),
                ('run_time', models.IntegerField(default=-1)),
                ('run_memory', models.IntegerField(default=-1)),
                ('length', models.IntegerField(default=-1)),
                ('oj_special', models.TextField(default='')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submission', to='database.OJAccount')),
                ('oj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submission', to='database.OJ', to_field='name')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submission', to='database.Problem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submission', to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oj_result', models.CharField(max_length=64)),
                ('result', models.CharField(max_length=64)),
                ('oj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submission_result', to='database.OJ', to_field='name')),
            ],
        ),
        migrations.CreateModel(
            name='UserFollowingRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True)),
                ('caption', models.CharField(default='', max_length=64)),
                ('public', models.BooleanField(default=False)),
                ('register_time', models.BigIntegerField(default=0)),
                ('member_number', models.IntegerField(default=0)),
                ('notice', models.TextField(default='')),
                ('introduction', models.TextField(default='')),
                ('category', models.ManyToManyField(related_name='group', through='database.ProblemCategoryGroupRelation', to='database.ProblemCategory')),
            ],
        ),
        migrations.CreateModel(
            name='UserGroupRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identity', models.IntegerField(default=0)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_rel', to='database.UserGroup', to_field='name')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_rel', to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
        ),
        migrations.CreateModel(
            name='UserIdentity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(choices=[(0, 'disabled'), (100, 'root'), (200, 'admin'), (300, 'manager'), (400, 'normal')], default=400)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='identity', to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
        ),
        migrations.CreateModel(
            name='UserPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('function', models.CharField(max_length=32, unique=True)),
                ('explanation', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='UserPermissionRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allowed', models.BooleanField()),
                ('level', models.IntegerField(choices=[(0, 'disabled'), (100, 'root'), (200, 'admin'), (300, 'manager'), (400, 'normal')], default=400)),
                ('function', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_relation', to='database.UserPermission', to_field='function')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permission_relation', to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('register_time', models.BigIntegerField(default=0)),
                ('nickname', models.CharField(max_length=64, null=True)),
                ('sex', models.CharField(default='secret', max_length=8)),
                ('photo', models.FileField(max_length=64, null=True, upload_to='')),
                ('school', models.CharField(max_length=128, null=True)),
                ('submission_number', models.IntegerField(default=0)),
                ('problem_solved_number', models.IntegerField(default=0)),
                ('problem_tried_number', models.IntegerField(default=0)),
                ('last_update_time', models.BigIntegerField(default=0)),
                ('updating', models.BooleanField(default=False)),
                ('following', models.ManyToManyField(related_name='followers', through='database.UserFollowingRelation', to='database.UserProfile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
        ),
        migrations.CreateModel(
            name='UserStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school', models.CharField(max_length=16)),
                ('sno', models.CharField(max_length=16)),
                ('college', models.CharField(max_length=128)),
                ('major', models.CharField(max_length=128)),
                ('class_in', models.CharField(max_length=64)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
        ),
        migrations.AddField(
            model_name='userpermission',
            name='user',
            field=models.ManyToManyField(related_name='permission', through='database.UserPermissionRelation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='usergroup',
            name='user',
            field=models.ManyToManyField(related_name='group', through='database.UserGroupRelation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userfollowingrelation',
            name='follower',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following_relation', to='database.UserProfile', to_field='user'),
        ),
        migrations.AddField(
            model_name='userfollowingrelation',
            name='following',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follower_relation', to='database.UserProfile', to_field='username'),
        ),
        migrations.AddField(
            model_name='problemcategorygrouprelation',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.UserGroup', to_field='name'),
        ),
        migrations.AddField(
            model_name='problemcategory',
            name='category',
            field=models.ManyToManyField(related_name='parent', through='database.ProblemCategoryCategoryRelation', to='database.ProblemCategory'),
        ),
        migrations.AddField(
            model_name='problemcategory',
            name='oj',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='database.OJ', to_field='name'),
        ),
        migrations.AddField(
            model_name='problemcategory',
            name='problem',
            field=models.ManyToManyField(related_name='category', through='database.ProblemCategoryProblemRelation', to='database.Problem'),
        ),
        migrations.AddField(
            model_name='problem',
            name='user',
            field=models.ManyToManyField(related_name='problem_tried', through='database.ProblemUserRelation', to=settings.AUTH_USER_MODEL),
        ),
    ]
